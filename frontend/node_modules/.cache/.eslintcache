[{"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\services\\auth\\auth.js":"3","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\routes\\MainPageRoutes.js":"4","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\services\\authentication.service.js":"5","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\footer\\Footer.jsx":"6","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\header\\Header.jsx":"7","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\login\\Login.jsx":"8","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\profile\\Profile.jsx":"9","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\helpers\\index.js":"10","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\helpers\\handleResponse.js":"11","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\mainPage\\MainPageComponent.jsx":"12","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\department\\Department.jsx":"13","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\signup\\Signup.js":"14"},{"size":377,"mtime":1649269188571,"results":"15","hashOfConfig":"16"},{"size":2082,"mtime":1652302404795,"results":"17","hashOfConfig":"16"},{"size":143,"mtime":1649073111308,"results":"18","hashOfConfig":"16"},{"size":518,"mtime":1652369163437,"results":"19","hashOfConfig":"16"},{"size":1108,"mtime":1652302404879,"results":"20","hashOfConfig":"16"},{"size":494,"mtime":1645476443635,"results":"21","hashOfConfig":"16"},{"size":833,"mtime":1652300259887,"results":"22","hashOfConfig":"16"},{"size":2632,"mtime":1652302090533,"results":"23","hashOfConfig":"16"},{"size":1620,"mtime":1649268422684,"results":"24","hashOfConfig":"16"},{"size":35,"mtime":1649269788640,"results":"25","hashOfConfig":"16"},{"size":675,"mtime":1652295595914,"results":"26","hashOfConfig":"16"},{"size":1610,"mtime":1652298596442,"results":"27","hashOfConfig":"16"},{"size":1147,"mtime":1652299564133,"results":"28","hashOfConfig":"16"},{"size":2906,"mtime":1652369020822,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"mgg6a3",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\index.js",[],[],["77","78"],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\App.js",["79","80"],[],"import './App.css';\r\nimport Header from \"./components/header/Header\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport MainPageRoutes from \"./routes/MainPageRoutes\";\r\nimport {isAuthenticated} from \"./services/auth/auth\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {authenticationService} from \"./services/authentication.service\";\r\nimport {Login} from \"./components/login/Login\";\r\nimport MainPageComponent from \"./components/mainPage/MainPageComponent\"\r\nimport Department from \"./components/department/Department\";\r\nimport Signup from \"./components/signup/Signup\";\r\n\r\nconst user = {\r\n    name: 'User',\r\n    email: 'user@exmaple.com',\r\n    roles: ['user']\r\n};\r\n\r\nconst admin = {\r\n    name: 'Admin',\r\n    email: 'admin@exmaple.com',\r\n    roles: ['user', 'admin']\r\n};\r\n\r\n// const currentUser = admin;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        authenticationService.currentUser.subscribe(\r\n            user => this.setState({\r\n                    currentUser: user,\r\n                }\r\n            ));\r\n    }\r\n\r\n    render() {\r\n        const {currentUser} = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <Header user={currentUser}/>\r\n\r\n                <main>\r\n                    {\r\n                        isAuthenticated(currentUser) && (\r\n                            <MainPageRoutes user={currentUser}/>\r\n                        )\r\n\r\n                    }\r\n\r\n                    <Routes>\r\n                        <Route path='/departments/:id' element={<Department/>}/>\r\n                        <Route exact path=\"/\" element={<MainPageComponent/>}/>\r\n                        <Route path=\"/login\" element={<Login/>}/>\r\n                        <Route path=\"/signup\" element={<Signup/>}/>\r\n                    </Routes>\r\n                </main>\r\n\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\services\\auth\\auth.js",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\routes\\MainPageRoutes.js",["81"],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\services\\authentication.service.js",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\footer\\Footer.jsx",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\header\\Header.jsx",["82"],[],"import classes from \"./Header.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {hasRole, isAuthenticated} from \"../../services/auth/auth\";\r\n\r\nfunction Header({user}) {\r\n    return (\r\n        <div className={`${classes.header}`}>\r\n            <Link to=\"/\" className={`${classes.logo}`}>Polyclinic</Link>\r\n            <div className={`${classes.links}`}>\r\n                <Link to=\"/\" className={`${classes.link}`}>Home</Link>\r\n                {isAuthenticated(user) && <Link to=\"profile\" className={`${classes.link}`}>Profile</Link>}\r\n                {!isAuthenticated(user) && <Link to=\"login\" className={`${classes.link}`}>Log In</Link>}\r\n                {!isAuthenticated(user) && <Link to=\"signup\" className={`${classes.link}`}>Sign up</Link>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\login\\Login.jsx",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\profile\\Profile.jsx",["83"],[],"import logo from \"../../assets/img/user.png\";\r\nimport classes from './Profile.module.css';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Profile(props) {\r\n    const [user, setUser] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getUser(props.user.id);\r\n    }, []);\r\n\r\n    function getUser(id) {\r\n        fetch(`http://localhost:3001/users/${id}`)\r\n            .then(async response => {\r\n                return await response.json();\r\n            })\r\n            .then(data => {\r\n                setUser(data);\r\n            });\r\n    }\r\n\r\n    function updateUser(id) {\r\n        let name = prompt('Enter user name');\r\n        let email = prompt('Enter user email');\r\n\r\n        fetch(`http://localhost:3001/users/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({name, email}),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getUser(id);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.AppMain}`}>\r\n            <img src={logo} className={`${classes.logo}`} alt=\"logo\"/>\r\n            <h3>My profile</h3>\r\n            <div className={classes.userInfo}>\r\n                <p>Name: {user.name}</p>\r\n                <p>Email: {user.email}</p>\r\n            </div>\r\n            {user && <button onClick={() => updateUser(user.id)} className={classes.updateButton}>Update info</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\helpers\\index.js",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\helpers\\handleResponse.js",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\mainPage\\MainPageComponent.jsx",[],[],"C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\department\\Department.jsx",["84","85"],[],"import {Link, useParams} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Department() {\r\n  const params = useParams();\r\n\r\n  const [doctors, setDoctors] = useState(false);\r\n  useEffect(() => {\r\n    getDoctors();\r\n  }, []);\r\n\r\n  function getDoctors() {\r\n    fetch('http://localhost:8080/departments/'+params.id)\r\n    .then(async response => {\r\n      return await response.json();\r\n    })\r\n    .then(data => {\r\n      setDoctors(data);\r\n    });\r\n  }\r\n\r\n  return (\r\n      <div >\r\n        <h1>Doctors</h1>\r\n        <div>\r\n          {doctors ?\r\n              (\r\n                  <div>\r\n                    {doctors.map(doctor => (\r\n                        <div>\r\n                          <p>{doctor.name}</p>\r\n                          <p>Cabinet {doctor.cabinet}</p>\r\n                          <p>{doctor.email}</p>\r\n                          <br/>\r\n                        </div>\r\n                    ))}\r\n                  </div>\r\n              ) : (\r\n                  <p>There is no departments data available</p>\r\n              )\r\n          }\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Department;\r\n","C:\\Users\\user\\Desktop\\java\\PolyclinicSpringReact\\frontend\\src\\components\\signup\\Signup.js",[],[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":14,"column":7,"nodeType":"92","messageId":"93","endLine":14,"endColumn":11},{"ruleId":"90","severity":1,"message":"94","line":20,"column":7,"nodeType":"92","messageId":"93","endLine":20,"endColumn":12},{"ruleId":"90","severity":1,"message":"95","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":3,"column":9,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":10,"column":8,"nodeType":"98","endLine":10,"endColumn":10,"suggestions":"99"},{"ruleId":"90","severity":1,"message":"100","line":1,"column":9,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":10,"column":6,"nodeType":"98","endLine":10,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'admin' is assigned a value but never used.","'hasRole' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.user.id'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getDoctors'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [props.user.id]",{"range":"111","text":"112"},"Update the dependencies array to be: [getDoctors]",{"range":"113","text":"114"},[276,278],"[props.user.id]",[250,252],"[getDoctors]"]