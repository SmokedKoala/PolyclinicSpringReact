{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\PolyclinicSpringReact\\\\frontend\\\\src\\\\routes\\\\MainPageRoutes.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { hasRole, isAuthenticated } from \"../services/auth/auth\";\nimport User from \"../components/user/User\";\nimport Admin from \"../components/admin/Admin\";\nimport UsersList from \"../components/userslist/UsersList\";\nimport Profile from \"../components/profile/Profile\";\nimport Department from \"../components/department/Department\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPageRoutes = _ref => {\n  let {\n    user\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [hasRole(user, ['admin']) && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/users\",\n      element: /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 38\n    }, this), hasRole(user, ['user']) && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/user\",\n      element: User()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 37\n    }, this), hasRole(user, ['admin']) && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin\",\n      element: Admin()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }, this), isAuthenticated(user) && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile\",\n      element: Profile({\n        user: user\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MainPageRoutes;\nexport default MainPageRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageRoutes\");","map":{"version":3,"sources":["C:/Users/user/Desktop/java/PolyclinicSpringReact/frontend/src/routes/MainPageRoutes.js"],"names":["Route","Routes","hasRole","isAuthenticated","User","Admin","UsersList","Profile","Department","MainPageRoutes","user"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,OAAR,EAAiBC,eAAjB,QAAuC,uBAAvC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;;AAEA,MAAMC,cAAc,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACjC,sBACI,QAAC,MAAD;AAAA,eACGR,OAAO,CAACQ,IAAD,EAAO,CAAC,OAAD,CAAP,CAAP,iBAA4B,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AACO,MAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,YAD/B,EAGGR,OAAO,CAACQ,IAAD,EAAO,CAAC,MAAD,CAAP,CAAP,iBAA2B,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,OAAO,EAAEN,IAAI;AAAjC;AAAA;AAAA;AAAA;AAAA,YAH9B,EAIGF,OAAO,CAACQ,IAAD,EAAO,CAAC,OAAD,CAAP,CAAP,iBAA4B,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEL,KAAK;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJ/B,EAKGF,eAAe,CAACO,IAAD,CAAf,iBAAyB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AACO,MAAA,OAAO,EAAEH,OAAO,CAAC;AAACG,QAAAA,IAAI,EAAEA;AAAP,OAAD;AADvB;AAAA;AAAA;AAAA;AAAA,YAL5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD,CAXD;;KAAMD,c;AAaN,eAAeA,cAAf","sourcesContent":["import {Route, Routes} from \"react-router-dom\";\r\nimport {hasRole, isAuthenticated} from \"../services/auth/auth\";\r\nimport User from \"../components/user/User\";\r\nimport Admin from \"../components/admin/Admin\";\r\nimport UsersList from \"../components/userslist/UsersList\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport Department from \"../components/department/Department\";\r\n\r\nconst MainPageRoutes = ({user}) => {\r\n  return (\r\n      <Routes>\r\n        {hasRole(user, ['admin']) && <Route path='/users'\r\n                                            element={<UsersList/>}/>}\r\n        {hasRole(user, ['user']) && <Route path='/user' element={User()}/>}\r\n        {hasRole(user, ['admin']) && <Route path='/admin' element={Admin()}/>}\r\n        {isAuthenticated(user) && <Route path='/profile'\r\n                                         element={Profile({user: user})}/>}\r\n      </Routes>\r\n  );\r\n};\r\n\r\nexport default MainPageRoutes;\r\n"]},"metadata":{},"sourceType":"module"}