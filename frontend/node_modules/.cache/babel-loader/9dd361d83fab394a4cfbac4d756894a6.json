{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\PolyclinicSpringReact\\\\frontend\\\\src\\\\components\\\\profile\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport patientLogo from \"../../assets/img/patient.png\";\nimport doctorLogo from \"../../assets/img/doctor.png\";\nimport classes from './Profile.module.css';\nimport { appointmentService } from \"../../services/appointment.service\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem('currentUser'));\n  const role = localStorage.getItem('currentUserRole'); // let appointments = localStorage.getItem('appointments');\n\n  const [appointments, setAppointments] = useState(false);\n\n  if (role === 'patient') {\n    setAppointments(appointmentService.GetAppointmentsListForPatient(user.id));\n  } else {\n    setAppointments(appointmentService.GetAppointmentsListForDoctor(user.id));\n  }\n\n  console.log(user);\n  console.log(role);\n  console.log(appointments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.AppMain}`,\n    children: [role === 'patient' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: patientLogo,\n      className: `${classes.logo}`,\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: doctorLogo,\n      className: `${classes.logo}`,\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.userInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: appointments ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [role === 'patient' ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: appointment.patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: appointment.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: appointment.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is no departments data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Profile, \"/gQ4+BhzPHVMBm2r9CYkH1I2nQA=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/user/Desktop/java/PolyclinicSpringReact/frontend/src/components/profile/Profile.jsx"],"names":["patientLogo","doctorLogo","classes","appointmentService","useState","Profile","user","JSON","parse","localStorage","getItem","role","appointments","setAppointments","GetAppointmentsListForPatient","id","GetAppointmentsListForDoctor","console","log","AppMain","logo","userInfo","name","email","map","appointment","patient","time","description"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,kBAAR,QAAiC,oCAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAb;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAb,CAFiB,CAGjB;;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;;AACA,MAAIO,IAAI,KAAK,SAAb,EAAwB;AACtBE,IAAAA,eAAe,CAACV,kBAAkB,CAACW,6BAAnB,CAAiDR,IAAI,CAACS,EAAtD,CAAD,CAAf;AACD,GAFD,MAEO;AACLF,IAAAA,eAAe,CAACV,kBAAkB,CAACa,4BAAnB,CAAgDV,IAAI,CAACS,EAArD,CAAD,CAAf;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEV,OAAO,CAACiB,OAAQ,EAAnC;AAAA,eACGR,IAAI,KAAK,SAAT,gBACG;AAAK,MAAA,GAAG,EAAEX,WAAV;AAAuB,MAAA,SAAS,EAAG,GAAEE,OAAO,CAACkB,IAAK,EAAlD;AAAqD,MAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAK,MAAA,GAAG,EAAEnB,UAAV;AAAsB,MAAA,SAAS,EAAG,GAAEC,OAAO,CAACkB,IAAK,EAAjD;AAAoD,MAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAJN,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACmB,QAAxB;AAAA,8BACE;AAAA,6BAAUf,IAAI,CAACgB,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWhB,IAAI,CAACiB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA,gBACGX,YAAY,gBAEL;AAAA,kBACGA,YAAY,CAACY,GAAb,CAAiBC,WAAW,iBACzB;AAAA,qBACGd,IAAI,KAAK,SAAT,gBACG;AAAA;AAAA;AAAA;AAAA,kBADH,gBAKG;AAAA,mCACE;AAAA,wBAAIc,WAAW,CAACC,OAAZ,CAAoBJ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANN,eAUE;AAAA,sBAAIG,WAAW,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAA,sBAAIF,WAAW,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cAFK,gBAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBV;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCD;;GAxDQvB,O;;KAAAA,O;AA0DT,eAAeA,OAAf","sourcesContent":["import patientLogo from \"../../assets/img/patient.png\";\r\nimport doctorLogo from \"../../assets/img/doctor.png\";\r\nimport classes from './Profile.module.css';\r\nimport {appointmentService} from \"../../services/appointment.service\";\r\nimport {useState} from \"react\";\r\n\r\nfunction Profile() {\r\n  const user = JSON.parse(localStorage.getItem('currentUser'))\r\n  const role = localStorage.getItem('currentUserRole')\r\n  // let appointments = localStorage.getItem('appointments');\r\n  const [appointments, setAppointments] = useState(false);\r\n  if (role === 'patient') {\r\n    setAppointments(appointmentService.GetAppointmentsListForPatient(user.id));\r\n  } else {\r\n    setAppointments(appointmentService.GetAppointmentsListForDoctor(user.id));\r\n  }\r\n\r\n  console.log(user)\r\n  console.log(role)\r\n  console.log(appointments)\r\n\r\n  return (\r\n      <div className={`${classes.AppMain}`}>\r\n        {role === 'patient' ? (\r\n            <img src={patientLogo} className={`${classes.logo}`} alt=\"logo\"/>\r\n        ) : (\r\n            <img src={doctorLogo} className={`${classes.logo}`} alt=\"logo\"/>\r\n        )}\r\n        <h3>My profile</h3>\r\n        <div className={classes.userInfo}>\r\n          <p>Name: {user.name}</p>\r\n          <p>Email: {user.email}</p>\r\n        </div>\r\n\r\n        <h3>Appointments</h3>\r\n        <div>\r\n          {appointments ?\r\n              (\r\n                  <div>\r\n                    {appointments.map(appointment => (\r\n                        <div>\r\n                          {role === 'patient' ? (\r\n                              <div>\r\n\r\n                              </div>\r\n                          ) : (\r\n                              <div>\r\n                                <p>{appointment.patient.name}</p>\r\n                              </div>\r\n                          )}\r\n                          <p>{appointment.time}</p>\r\n                          <p>{appointment.description}</p>\r\n                        </div>\r\n                    ))}\r\n                  </div>\r\n              ) : (\r\n                  <p>There is no departments data available</p>\r\n              )\r\n          }\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}