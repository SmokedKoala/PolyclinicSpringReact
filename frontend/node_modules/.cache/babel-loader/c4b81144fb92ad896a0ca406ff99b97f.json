{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\java\\\\PolyclinicSpringReact\\\\frontend\\\\src\\\\components\\\\signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nfunction Signup() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // States for checking the errors\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false); // Handling the name change\n\n  const handleName = e => {\n    setName(e.target.value);\n    setSubmitted(false);\n  }; // Handling the email change\n\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    setSubmitted(false);\n  }; // Handling the password change\n\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  }; // Handling the form submission\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setError(true);\n    } else {\n      setSubmitted(true);\n      setError(false);\n      const params = {\n        name: name,\n        password: password,\n        email: email\n      };\n      axios.post(\"https://ouramazingserver.com/api/signup/submit\", params).then(res => {\n        if (res.data.success === true) {\n          localStorage.token = res.data.token;\n          localStorage.isAuthenticated = true;\n          window.location.reload();\n        }\n      }).catch(err => {\n        console.log(\"Sign up data submit error: \", err);\n      });\n    }\n  }; // Showing success message\n\n\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      style: {\n        display: submitted ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User \", name, \" successfully registered!!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }; // Showing error message if error is true\n\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please enter all the fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Patient Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [errorMessage(), successMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleName,\n        className: \"input\",\n        value: name,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        className: \"input\",\n        value: password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Signup, \"CkEWUu6kiVYszNfmZ6Lg00C0uz0=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/user/Desktop/java/PolyclinicSpringReact/frontend/src/components/signup/Signup.js"],"names":["useState","axios","require","Signup","name","setName","email","setEmail","password","setPassword","submitted","setSubmitted","error","setError","handleName","e","target","value","handleEmail","handlePassword","handleSubmit","preventDefault","params","post","then","res","data","success","localStorage","token","isAuthenticated","window","location","reload","catch","err","console","log","successMessage","display","errorMessage"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAHe,CAKjB;;AACE,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC,CAPe,CASjB;;AACE,QAAMc,UAAU,GAAIC,CAAD,IAAO;AACxBV,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD,CAVe,CAejB;;;AACE,QAAMO,WAAW,GAAIH,CAAD,IAAO;AACzBR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD,CAhBe,CAqBjB;;;AACE,QAAMQ,cAAc,GAAIJ,CAAD,IAAO;AAC5BN,IAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD,CAtBe,CA2BjB;;;AACE,QAAMS,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAIjB,IAAI,KAAK,EAAT,IAAeE,KAAK,KAAK,EAAzB,IAA+BE,QAAQ,KAAK,EAAhD,EAAoD;AAClDK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,YAAMS,MAAM,GAAG;AAAClB,QAAAA,IAAI,EAAEA,IAAP;AAAaI,QAAAA,QAAQ,EAAEA,QAAvB;AAAiCF,QAAAA,KAAK,EAAEA;AAAxC,OAAf;AACAL,MAAAA,KAAK,CACJsB,IADD,CACM,gDADN,EACwDD,MADxD,EAECE,IAFD,CAEMC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAAzB,EAA+B;AAC7BC,UAAAA,YAAY,CAACC,KAAb,GAAqBJ,GAAG,CAACC,IAAJ,CAASG,KAA9B;AACAD,UAAAA,YAAY,CAACE,eAAb,GAA+B,IAA/B;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,OARD,EASCC,KATD,CASOC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAA3C;AACD,OAXD;AAYD;AACF,GAtBD,CA5Be,CAoDjB;;;AACE,QAAMG,cAAc,GAAG,MAAM;AAC3B,wBACI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE7B,SAAS,GAAG,EAAH,GAAQ;AADrB,OAFX;AAAA,6BAKE;AAAA,4BAAUN,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADJ;AASD,GAVD,CArDe,CAiEjB;;;AACE,QAAMoC,YAAY,GAAG,MAAM;AACzB,wBACI;AACI,MAAA,SAAS,EAAC,OADd;AAEI,MAAA,KAAK,EAAE;AACLD,QAAAA,OAAO,EAAE3B,KAAK,GAAG,EAAH,GAAQ;AADjB,OAFX;AAAA,6BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADJ;AASD,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACG4B,YAAY,EADf,EAEGF,cAAc,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAA,8BAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,QAAQ,EAAExB,UAAjB;AAA6B,QAAA,SAAS,EAAC,OAAvC;AACO,QAAA,KAAK,EAAEV,IADd;AACoB,QAAA,IAAI,EAAC;AADzB;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAO,QAAA,QAAQ,EAAEc,WAAjB;AAA8B,QAAA,SAAS,EAAC,OAAxC;AACO,QAAA,KAAK,EAAEZ,KADd;AACqB,QAAA,IAAI,EAAC;AAD1B;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAO,QAAA,QAAQ,EAAEa,cAAjB;AAAiC,QAAA,SAAS,EAAC,OAA3C;AACO,QAAA,KAAK,EAAEX,QADd;AACwB,QAAA,IAAI,EAAC;AAD7B;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAQ,QAAA,OAAO,EAAEY,YAAjB;AAA+B,QAAA,SAAS,EAAC,KAAzC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCD;;GA9GQjB,M;;KAAAA,M;AAgHT,eAAeA,MAAf","sourcesContent":["import {useState} from \"react\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nfunction Signup(){\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n// States for checking the errors\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n// Handling the name change\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n    setSubmitted(false);\r\n  };\r\n\r\n// Handling the email change\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    setSubmitted(false);\r\n  };\r\n\r\n// Handling the password change\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n    setSubmitted(false);\r\n  };\r\n\r\n// Handling the form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name === '' || email === '' || password === '') {\r\n      setError(true);\r\n    } else {\r\n      setSubmitted(true);\r\n      setError(false);\r\n\r\n      const params = {name: name, password: password, email: email};\r\n      axios\r\n      .post(\"https://ouramazingserver.com/api/signup/submit\", params)\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          localStorage.token = res.data.token;\r\n          localStorage.isAuthenticated = true;\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Sign up data submit error: \", err);\r\n      });\r\n    }\r\n  };\r\n\r\n// Showing success message\r\n  const successMessage = () => {\r\n    return (\r\n        <div\r\n            className=\"success\"\r\n            style={{\r\n              display: submitted ? '' : 'none',\r\n            }}>\r\n          <h1>User {name} successfully registered!!</h1>\r\n        </div>\r\n    );\r\n  };\r\n\r\n// Showing error message if error is true\r\n  const errorMessage = () => {\r\n    return (\r\n        <div\r\n            className=\"error\"\r\n            style={{\r\n              display: error ? '' : 'none',\r\n            }}>\r\n          <h1>Please enter all the fields</h1>\r\n        </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n      <div className=\"form\">\r\n        <div>\r\n          <h1>Patient Registration</h1>\r\n        </div>\r\n\r\n        {/* Calling to the methods */}\r\n        <div className=\"messages\">\r\n          {errorMessage()}\r\n          {successMessage()}\r\n        </div>\r\n\r\n        <form>\r\n          {/* Labels and inputs for form data */}\r\n          <label className=\"label\">Name</label>\r\n          <input onChange={handleName} className=\"input\"\r\n                 value={name} type=\"text\" />\r\n\r\n          <label className=\"label\">Email</label>\r\n          <input onChange={handleEmail} className=\"input\"\r\n                 value={email} type=\"email\" />\r\n\r\n          <label className=\"label\">Password</label>\r\n          <input onChange={handlePassword} className=\"input\"\r\n                 value={password} type=\"password\" />\r\n\r\n          <button onClick={handleSubmit} className=\"btn\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}