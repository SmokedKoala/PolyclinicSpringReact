{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { handleResponse } from \"../helpers\";\nimport { useState } from \"react\";\nexport const appointmentService = {\n  getAppointmentInfoForPatient,\n  getAppointmentInfoForDoctor,\n  getAppointmentsListForPatient,\n  getAppointmentsListForDoctor,\n  logout\n};\n\nfunction getAppointmentsListForPatient(id) {\n  let list;\n  fetch('http://localhost:8080/appointments/patient/' + id).then(async response => {\n    return await response.json();\n  }).then(data => {\n    console.log(data);\n    list = data;\n  });\n  console.log(list);\n  return list;\n}\n\nfunction getAppointmentsListForDoctor(id) {\n  let list;\n  fetch('http://localhost:8080/appointments/doctor/' + id).then(async response => {\n    return await response.json();\n  }).then(data => {\n    console.log(data);\n    list = data;\n  });\n  return list;\n}\n\nfunction getAppointmentInfoForPatient(id) {\n  _s();\n\n  const [doctor, setDoctor] = useState(false);\n  fetch('http://localhost:8080/appointments/patient/info/' + id).then(async response => {\n    return await response.json();\n  }).then(data => {\n    console.log(data);\n    setDoctor(data);\n  });\n  return doctor;\n}\n\n_s(getAppointmentInfoForPatient, \"Cdt5SD5hOKrlrCNfL1csH+rMA2k=\");\n\nfunction getAppointmentInfoForDoctor(id) {\n  _s2();\n\n  const [patient, setPatient] = useState(false);\n  fetch('http://localhost:8080/appointments/doctor/info/' + id).then(async response => {\n    return await response.json();\n  }).then(data => {\n    console.log(data);\n    setPatient(data);\n  });\n  return patient;\n}\n\n_s2(getAppointmentInfoForDoctor, \"N5o9hm+suj5GpU6yRMvMQdNYbAs=\");\n\nfunction logout() {}","map":{"version":3,"sources":["C:/Users/user/Desktop/java/PolyclinicSpringReact/frontend/src/services/appointment.service.js"],"names":["handleResponse","useState","appointmentService","getAppointmentInfoForPatient","getAppointmentInfoForDoctor","getAppointmentsListForPatient","getAppointmentsListForDoctor","logout","id","list","fetch","then","response","json","data","console","log","doctor","setDoctor","patient","setPatient"],"mappings":";;;AAAA,SAAQA,cAAR,QAA6B,YAA7B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,OAAO,MAAMC,kBAAkB,GAAG;AAChCC,EAAAA,4BADgC;AAEhCC,EAAAA,2BAFgC;AAGhCC,EAAAA,6BAHgC;AAIhCC,EAAAA,4BAJgC;AAKhCC,EAAAA;AALgC,CAA3B;;AAOP,SAASF,6BAAT,CAAuCG,EAAvC,EAA2C;AACzC,MAAIC,IAAJ;AACAC,EAAAA,KAAK,CAAC,gDAA8CF,EAA/C,CAAL,CACCG,IADD,CACM,MAAMC,QAAN,IAAkB;AACtB,WAAO,MAAMA,QAAQ,CAACC,IAAT,EAAb;AACD,GAHD,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,IAAAA,IAAI,GAAGK,IAAP;AACD,GAPD;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,SAAOA,IAAP;AACD;;AAED,SAASH,4BAAT,CAAsCE,EAAtC,EAA0C;AACxC,MAAIC,IAAJ;AACAC,EAAAA,KAAK,CAAC,+CAA6CF,EAA9C,CAAL,CACCG,IADD,CACM,MAAMC,QAAN,IAAkB;AACtB,WAAO,MAAMA,QAAQ,CAACC,IAAT,EAAb;AACD,GAHD,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,IAAAA,IAAI,GAAGK,IAAP;AACD,GAPD;AAQA,SAAOL,IAAP;AACD;;AAGD,SAASN,4BAAT,CAAsCK,EAAtC,EAA0C;AAAA;;AACxC,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;AACAS,EAAAA,KAAK,CAAC,qDAAmDF,EAApD,CAAL,CACCG,IADD,CACM,MAAMC,QAAN,IAAkB;AACtB,WAAO,MAAMA,QAAQ,CAACC,IAAT,EAAb;AACD,GAHD,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAI,IAAAA,SAAS,CAACJ,IAAD,CAAT;AACD,GAPD;AAQA,SAAOG,MAAP;AACD;;GAXQd,4B;;AAaT,SAASC,2BAAT,CAAqCI,EAArC,EAAyC;AAAA;;AACvC,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACAS,EAAAA,KAAK,CAAC,oDAAkDF,EAAnD,CAAL,CACCG,IADD,CACM,MAAMC,QAAN,IAAkB;AACtB,WAAO,MAAMA,QAAQ,CAACC,IAAT,EAAb;AACD,GAHD,EAICF,IAJD,CAIMG,IAAI,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAM,IAAAA,UAAU,CAACN,IAAD,CAAV;AACD,GAPD;AAQA,SAAOK,OAAP;AACD;;IAXQf,2B;;AAaT,SAASG,MAAT,GAAkB,CAEjB","sourcesContent":["import {handleResponse} from \"../helpers\";\r\nimport {useState} from \"react\";\r\n\r\nexport const appointmentService = {\r\n  getAppointmentInfoForPatient,\r\n  getAppointmentInfoForDoctor,\r\n  getAppointmentsListForPatient,\r\n  getAppointmentsListForDoctor,\r\n  logout\r\n};\r\nfunction getAppointmentsListForPatient(id) {\r\n  let list;\r\n  fetch('http://localhost:8080/appointments/patient/'+id)\r\n  .then(async response => {\r\n    return await response.json();\r\n  })\r\n  .then(data => {\r\n    console.log(data);\r\n    list = data;\r\n  });\r\n  console.log(list)\r\n  return list;\r\n}\r\n\r\nfunction getAppointmentsListForDoctor(id) {\r\n  let list;\r\n  fetch('http://localhost:8080/appointments/doctor/'+id)\r\n  .then(async response => {\r\n    return await response.json();\r\n  })\r\n  .then(data => {\r\n    console.log(data);\r\n    list = data;\r\n  });\r\n  return list;\r\n}\r\n\r\n\r\nfunction getAppointmentInfoForPatient(id) {\r\n  const [doctor, setDoctor] = useState(false);\r\n  fetch('http://localhost:8080/appointments/patient/info/'+id)\r\n  .then(async response => {\r\n    return await response.json();\r\n  })\r\n  .then(data => {\r\n    console.log(data);\r\n    setDoctor(data)\r\n  });\r\n  return doctor;\r\n}\r\n\r\nfunction getAppointmentInfoForDoctor(id) {\r\n  const [patient, setPatient] = useState(false);\r\n  fetch('http://localhost:8080/appointments/doctor/info/'+id)\r\n  .then(async response => {\r\n    return await response.json();\r\n  })\r\n  .then(data => {\r\n    console.log(data);\r\n    setPatient(data)\r\n  });\r\n  return patient;\r\n}\r\n\r\nfunction logout() {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}