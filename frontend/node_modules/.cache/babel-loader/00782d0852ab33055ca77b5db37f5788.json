{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SophieP\\\\Documents\\\\Sharaga\\\\Fullstack\\\\create-react-app\\\\my-app\\\\src\\\\components\\\\userslist\\\\UsersList.jsx\",\n    _s = $RefreshSig$();\n\nimport classes from './UsersList.module.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersList() {\n  _s();\n\n  const [users, setUsers] = useState(false);\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  function getUsers() {\n    fetch('http://localhost:3001').then(async response => {\n      return await response.json();\n    }).then(data => {\n      setUsers(data);\n    });\n  }\n\n  function createUser() {\n    let name = prompt('Enter user name');\n    let email = prompt('Enter user email');\n    fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getUsers();\n    });\n  }\n\n  function deleteUser() {\n    let id = prompt('Enter user id');\n    fetch(`http://localhost:3001/users/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getUsers();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: users ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.usersList,\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.userInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.userId,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.userName,\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.userMail,\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is no user data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createUser,\n      children: \"Add user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteUser,\n      children: \"Delete user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UsersList, \"QE/LEQenXXkpUR6LHjK6Kp5p0gg=\");\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/SophieP/Documents/Sharaga/Fullstack/create-react-app/my-app/src/components/userslist/UsersList.jsx"],"names":["classes","useEffect","useState","UsersList","users","setUsers","getUsers","fetch","then","response","json","data","createUser","name","prompt","email","method","headers","body","JSON","stringify","text","alert","deleteUser","id","usersList","map","user","userInfo","userId","userName","userMail"],"mappings":"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","sourcesContent":["import classes from './UsersList.module.css';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction UsersList() {\r\n    const [users, setUsers] = useState(false);\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    function getUsers() {\r\n        fetch('http://localhost:3001')\r\n            .then(async response => {\r\n                return await response.json();\r\n            })\r\n            .then(data => {\r\n                setUsers(data);\r\n            });\r\n    }\r\n\r\n    function createUser() {\r\n        let name = prompt('Enter user name');\r\n        let email = prompt('Enter user email');\r\n\r\n        fetch('http://localhost:3001/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({name, email}),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getUsers();\r\n            });\r\n    }\r\n\r\n    function deleteUser() {\r\n        let id = prompt('Enter user id');\r\n        fetch(`http://localhost:3001/users/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getUsers();\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {users ?\r\n                    (\r\n                        <div className={classes.usersList}>\r\n                            {users.map(user => (\r\n                            <div className={classes.userInfo}>\r\n                                <span className={classes.userId}>{user.id}</span>\r\n                                <span className={classes.userName}>{user.name}</span>\r\n                                <span className={classes.userMail}>{user.email}</span>\r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p>There is no user data available</p>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <button onClick={createUser}>Add user</button>\r\n            <button onClick={deleteUser}>Delete user</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersList;\r\n"]},"metadata":{},"sourceType":"module"}